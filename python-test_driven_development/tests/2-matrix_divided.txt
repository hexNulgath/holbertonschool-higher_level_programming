# Test cases for matrix_divided function

###Importing
```python
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

## Test Case 1: Basic functionality
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]


## Test Case 2: Division by zero
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero


## Test Case 3: Non-numeric divisor
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'a')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

## Test Case 4: Non-list matrix
    >>> matrix_divided('not_a_matrix', 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

## Test Case 5: Matrix with inconsistent row sizes
    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

## Test Case 6: Matrix with non-numeric values
    >>> matrix_divided([[1, 2, 'three'], [4, 5, 6]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

## Test Case 7: Empty matrix
    >>> matrix_divided([[], []], 2)
    [[], []]


## Test Case 8: Single element matrix
    >>> matrix_divided([[10]], 5)
    [[2.0]]


## Test Case 9: Empty function
    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

